{"ast":null,"code":"var _jsxFileName = \"/Users/johnli/Documents/meetup_projects/shuffle-time2/front_end/src/components/ShuffleTimeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport ShuffleTimeDropdown from './ShuffleTimeDropdown';\nimport ShuffleTimeCardContainer from './ShuffleTimeCardContainer';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../styles/ShuffleTimeContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShuffleTimeContainer = props => {\n  _s();\n\n  const [japaneseNumber, setJapaneseNumber] = useState(0);\n  const [foreignerNumber, setForeignerNumber] = useState(0);\n  const [tableNumber, setTableNumber] = useState(0);\n  const [tableMapping, setTableMapping] = useState(0); // const [finalList, setFinalList] = useState([]);\n  // const [editMode, setEditMode] = useState(false);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {}, []); //check if errorMessage is not empty\n\n  function checkErrorMessage() {\n    return errorMessage ? true : false;\n  }\n\n  function handleTableGeneration(e) {\n    e.preventDefault();\n    let tempForeignerList = [];\n    tempForeignerList.length = foreignerNumber;\n    let tempJapaneseList = [];\n    tempJapaneseList.length = japaneseNumber;\n    let tempTableList = [];\n    tempTableList.length = 0;\n    let finalList = [];\n    finalList.length = tempTableList.length;\n    let listMapping = [];\n    let foreignerPerTable = Math.floor(foreignerNumber / tableNumber);\n    let foreignerLeftOver = foreignerNumber % tableNumber;\n    let japanesePerTable = Math.floor(japaneseNumber / tableNumber);\n    let japaneseLeftOver = japaneseNumber % tableNumber;\n    console.log(foreignerPerTable + \" \" + foreignerLeftOver);\n    console.log(japanesePerTable + \" \" + japaneseLeftOver);\n    console.log(tableNumber);\n\n    for (let i = 0; i < tableNumber; ++i) {\n      let newObject = {\n        foreigner: 0,\n        japanese: 0\n      };\n\n      if (foreignerNumber >= 1) {\n        newObject[\"foreigner\"] = foreignerPerTable;\n      }\n\n      if (japaneseNumber >= 1) {\n        newObject[\"japanese\"] = japanesePerTable;\n      }\n\n      if (foreignerLeftOver >= 1) {\n        newObject[\"foreigner\"] += 1;\n        foreignerLeftOver -= 1;\n      }\n\n      if (japaneseLeftOver >= 1) {\n        newObject[\"japanese\"] += 1;\n        japaneseLeftOver -= 1;\n      }\n\n      listMapping.push(newObject);\n    }\n\n    console.log(listMapping);\n    setTableMapping(listMapping);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Attendees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleTableGeneration,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n                setShuffleList: setJapaneseNumber,\n                participant: \"japanese\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n                setShuffleList: setForeignerNumber,\n                participant: \"foreigner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ShuffleTimeDropdown, {\n                setTableNumber: setTableNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeCardContainer, {\n              tableMapping: tableMapping,\n              foreignerNumber: foreignerNumber,\n              japaneseNumber: japaneseNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShuffleTimeContainer, \"EFy0djPYUFm38ibk+FLW7hLjoH4=\");\n\n_c = ShuffleTimeContainer;\nexport default ShuffleTimeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleTimeContainer\");","map":{"version":3,"sources":["/Users/johnli/Documents/meetup_projects/shuffle-time2/front_end/src/components/ShuffleTimeContainer.js"],"names":["React","useState","useEffect","ShuffleTimeList","ShuffleTimeDropdown","ShuffleTimeCardContainer","Form","Container","Row","Col","Button","ShuffleTimeContainer","props","japaneseNumber","setJapaneseNumber","foreignerNumber","setForeignerNumber","tableNumber","setTableNumber","tableMapping","setTableMapping","errorMessage","setErrorMessage","checkErrorMessage","handleTableGeneration","e","preventDefault","tempForeignerList","length","tempJapaneseList","tempTableList","finalList","listMapping","foreignerPerTable","Math","floor","foreignerLeftOver","japanesePerTable","japaneseLeftOver","console","log","i","newObject","foreigner","japanese","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport ShuffleTimeDropdown from './ShuffleTimeDropdown';\nimport ShuffleTimeCardContainer from './ShuffleTimeCardContainer';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport '../styles/ShuffleTimeContainer.css';\n\nconst ShuffleTimeContainer = (props) => {\n\n    const [japaneseNumber, setJapaneseNumber] = useState(0);\n    const [foreignerNumber, setForeignerNumber] = useState(0);\n    const [tableNumber, setTableNumber] = useState(0);\n    const [tableMapping, setTableMapping] = useState(0);\n    // const [finalList, setFinalList] = useState([]);\n    // const [editMode, setEditMode] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n        \n    }, []);\n\n    //check if errorMessage is not empty\n    function checkErrorMessage () {\n        return errorMessage ? true : false;\n    }\n\n    function handleTableGeneration (e) {\n        e.preventDefault();\n\n        let tempForeignerList = [];\n        tempForeignerList.length = foreignerNumber;\n\n        let tempJapaneseList = [];\n        tempJapaneseList.length = japaneseNumber;\n\n        let tempTableList = [];\n        tempTableList.length = 0;\n\n        let finalList = [];\n        finalList.length = tempTableList.length;\n\n        let listMapping = [];\n\n        let foreignerPerTable = Math.floor(foreignerNumber / tableNumber);\n        let foreignerLeftOver = foreignerNumber % tableNumber;\n\n        let japanesePerTable = Math.floor(japaneseNumber / tableNumber);\n        let japaneseLeftOver = japaneseNumber % tableNumber;\n\n        console.log(foreignerPerTable + \" \" + foreignerLeftOver);\n        console.log(japanesePerTable + \" \" + japaneseLeftOver);\n        console.log(tableNumber);\n\n        for (let i = 0; i < tableNumber; ++i) {\n            let newObject = {foreigner: 0, japanese: 0};\n            if(foreignerNumber >= 1) {\n                newObject[\"foreigner\"] = foreignerPerTable;\n            }\n            if(japaneseNumber >= 1) {\n                newObject[\"japanese\"] = japanesePerTable;\n            }\n            if(foreignerLeftOver >= 1) {\n                newObject[\"foreigner\"] += 1;\n                foreignerLeftOver -= 1;\n            }\n            if(japaneseLeftOver >= 1) {\n                newObject[\"japanese\"] += 1;\n                japaneseLeftOver -= 1;\n            }\n\n            listMapping.push(newObject);\n        }\n        console.log(listMapping);\n        setTableMapping(listMapping);\n    }\n\n    return (\n        <div>\n            <div className=\"student-container\">\n                <h1>List of Attendees</h1>\n                <Form onSubmit={handleTableGeneration}>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <ShuffleTimeList setShuffleList={setJapaneseNumber} participant=\"japanese\"/>\n                            </Col>\n                            <Col>\n                                <ShuffleTimeList  setShuffleList={setForeignerNumber} participant=\"foreigner\"/>\n                            </Col>\n                            <Col>\n                                <ShuffleTimeDropdown setTableNumber={setTableNumber} />\n                            </Col>\n                            <Col>\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <ShuffleTimeCardContainer tableMapping={tableMapping} foreignerNumber={foreignerNumber} japaneseNumber={japaneseNumber} />\n                        </Row>\n                    </Container>\n                </Form>\n            </div>\n        </div>\n    )\n};\n\nexport default ShuffleTimeContainer;\n"]},"metadata":{},"sourceType":"module"}