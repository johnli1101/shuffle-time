{"ast":null,"code":"var _jsxFileName = \"/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShuffleTimeContainer = props => {\n  _s();\n\n  const [japaneseList, setJapaneseList] = useState([]);\n  const [foreignerList, setForeignerList] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {// //use default json if it is not empty\n    // let studentJson = defaultJson.students;\n    // if(studentJson && studentJson.length !== 0) {\n    //     let newStudentList = [];\n    //     for (let i = 0; i < defaultJson.students.length; ++i) {\n    //         newStudentList.push({id: i+1, name: defaultJson.students[i]});\n    //     }\n    //     setStudents(newStudentList);\n    // }\n    // else{\n    //     console.log(\"json is empty\");\n    // }\n  }, []); // function isJson(str) {\n  //     try {\n  //         JSON.parse(str);\n  //     } catch (e) {\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  //check if errorMessage is not empty\n\n  function checkErrorMessage() {\n    return errorMessage ? true : false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: japaneseList,\n              setShuffleList: setJapaneseList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: foreignerList,\n              setShuffleList: setForeignerList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShuffleTimeContainer, \"QkSDTlDtjQwOoj6gdlNSkrXOod4=\");\n\n_c = ShuffleTimeContainer;\nexport default StudentChooserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleTimeContainer\");","map":{"version":3,"sources":["/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js"],"names":["React","useState","useEffect","ShuffleTimeList","Container","Row","Col","ShuffleTimeContainer","props","japaneseList","setJapaneseList","foreignerList","setForeignerList","editMode","setEditMode","errorMessage","setErrorMessage","checkErrorMessage","StudentChooserContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,oCAAP;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAfQ,EAeN,EAfM,CAAT,CAPoC,CAwBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAASe,iBAAT,GAA8B;AAC1B,WAAOF,YAAY,GAAG,IAAH,GAAU,KAA7B;AACH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,WAAW,EAAEN,YAA9B;AAA4C,cAAA,cAAc,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,WAAW,EAAEC,aAA9B;AAA6C,cAAA,cAAc,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAvDD;;GAAML,oB;;KAAAA,oB;AAyDN,eAAeW,uBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\n\nconst ShuffleTimeContainer = (props) => {\n\n    const [japaneseList, setJapaneseList] = useState([]);\n    const [foreignerList, setForeignerList] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n        // //use default json if it is not empty\n        // let studentJson = defaultJson.students;\n        // if(studentJson && studentJson.length !== 0) {\n\n        //     let newStudentList = [];\n        //     for (let i = 0; i < defaultJson.students.length; ++i) {\n        //         newStudentList.push({id: i+1, name: defaultJson.students[i]});\n        //     }\n        //     setStudents(newStudentList);\n        // }\n        // else{\n        //     console.log(\"json is empty\");\n        // }\n  \n    }, []);\n\n    // function isJson(str) {\n    //     try {\n    //         JSON.parse(str);\n    //     } catch (e) {\n    //         return false;\n    //     }\n    //     return true;\n    // }\n\n    //check if errorMessage is not empty\n    function checkErrorMessage () {\n        return errorMessage ? true : false;\n    }\n\n    return (\n        <div>\n            <div className=\"student-container\">\n                <h1>List of Students</h1>\n                <Container>\n                    <Row>\n                        <Col>\n                            <ShuffleTimeList shuffleList={japaneseList} setShuffleList={setJapaneseList}/>\n                        </Col>\n                        <Col>\n                            <ShuffleTimeList shuffleList={foreignerList} setShuffleList={setForeignerList}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentChooserContainer;\n"]},"metadata":{},"sourceType":"module"}