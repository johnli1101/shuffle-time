{"ast":null,"code":"var _jsxFileName = \"/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeList.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport '../styles/ShuffleTimeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShuffleTimeList = props => {\n  const {\n    shuffleList,\n    setShuffleList\n  } = props;\n\n  function showShuffleList() {\n    return shuffleList.map(attendee => {\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: shuffleList.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"delete-button\",\n          onClick: onClickDeleteItem,\n          variant: \"danger\",\n          size: \"md\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this)]\n      }, `shuffle-entry-${attendee.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function onClickDeleteItem(attendeeId) {\n    const updatedShuffleList = shuffleList.filter(attendee => {\n      return attendee.id !== attendeeId;\n    });\n    setShuffleList(updatedShuffleList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    className: \"shuffle-list\",\n    children: showShuffleList()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ShuffleTimeList;\nexport default ShuffleTimeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleTimeList\");","map":{"version":3,"sources":["/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeList.js"],"names":["React","useState","Button","ListGroup","ShuffleTimeList","props","shuffleList","setShuffleList","showShuffleList","map","attendee","name","onClickDeleteItem","id","attendeeId","updatedShuffleList","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,+BAAP;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCF,KAAxC;;AAEA,WAASG,eAAT,GAA2B;AACvB,WAAOF,WAAW,CAACG,GAAZ,CAAiBC,QAAD,IAAc;AACjC,0BACI,QAAC,SAAD,CAAW,IAAX;AAAA,gCACI;AAAA,oBAAOJ,WAAW,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAEC,iBAA3C;AAA8D,UAAA,OAAO,EAAC,QAAtE;AAA+E,UAAA,IAAI,EAAC,IAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA,SAAsB,iBAAgBF,QAAQ,CAACG,EAAG,EAAlD;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATM,CAAP;AAUH;;AAED,WAASD,iBAAT,CAA2BE,UAA3B,EAAuC;AACnC,UAAMC,kBAAkB,GAAGT,WAAW,CAACU,MAAZ,CAAoBN,QAAD,IAAc;AAC1D,aAAOA,QAAQ,CAACG,EAAT,KAAgBC,UAAvB;AACD,KAF0B,CAA3B;AAGAP,IAAAA,cAAc,CAACQ,kBAAD,CAAd;AACD;;AAEH,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,cAArB;AAAA,cACKP,eAAe;AADpB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD;;KAAMJ,e;AA8BN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport '../styles/ShuffleTimeList.css';\n\nconst ShuffleTimeList = (props) => { \n    const { shuffleList, setShuffleList } = props;\n\n    function showShuffleList() {\n        return shuffleList.map((attendee) => {\n            return (\n                <ListGroup.Item key={`shuffle-entry-${attendee.id}`} >\n                    <span>{shuffleList.name}</span>\n                        <Button className=\"delete-button\" onClick={onClickDeleteItem} variant=\"danger\" size=\"md\" >\n                            X\n                        </Button>\n                </ListGroup.Item>\n            );\n        })\n    }\n\n    function onClickDeleteItem(attendeeId) {\n        const updatedShuffleList = shuffleList.filter((attendee) => {\n          return attendee.id !== attendeeId;\n        })\n        setShuffleList(updatedShuffleList);\n      }\n\n    return (\n        <ListGroup className=\"shuffle-list\">\n            {showShuffleList()}\n        </ListGroup>\n    )\n}\n\nexport default ShuffleTimeList;\n"]},"metadata":{},"sourceType":"module"}