{"ast":null,"code":"var _jsxFileName = \"/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShuffleTimeContainer = props => {\n  _s();\n\n  const [japaneseListNumber, setJapaneseNumber] = useState(0);\n  const [foreignerListNumber, setForeignerNumber] = useState(0);\n  const [editMode, setEditMode] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {}, []); //check if errorMessage is not empty\n\n  function checkErrorMessage() {\n    return errorMessage ? true : false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Attendees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: japaneseNumber,\n              setShuffleList: setJapaneseNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: foreignerNumber,\n              setShuffleList: setForeignerNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShuffleTimeContainer, \"w5XcGiHYqihf8Kbin5S0V+KkfLY=\");\n\n_c = ShuffleTimeContainer;\nexport default ShuffleTimeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleTimeContainer\");","map":{"version":3,"sources":["/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js"],"names":["React","useState","useEffect","ShuffleTimeList","Container","Row","Col","ShuffleTimeContainer","props","japaneseListNumber","setJapaneseNumber","foreignerListNumber","setForeignerNumber","editMode","setEditMode","errorMessage","setErrorMessage","checkErrorMessage","japaneseNumber","foreignerNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,oCAAP;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,kBAAD,EAAqBC,iBAArB,IAA0CT,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACU,mBAAD,EAAsBC,kBAAtB,IAA4CX,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT,CAPoC,CAWpC;;AACA,WAASe,iBAAT,GAA8B;AAC1B,WAAOF,YAAY,GAAG,IAAH,GAAU,KAA7B;AACH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,WAAW,EAAEG,cAA9B;AAA8C,cAAA,cAAc,EAAER;AAA9D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,WAAW,EAAES,eAA9B;AAA+C,cAAA,cAAc,EAAEP;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjCD;;GAAML,oB;;KAAAA,oB;AAmCN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\n\nconst ShuffleTimeContainer = (props) => {\n\n    const [japaneseListNumber, setJapaneseNumber] = useState(0);\n    const [foreignerListNumber, setForeignerNumber] = useState(0);\n    const [editMode, setEditMode] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n\n    }, []);\n\n    //check if errorMessage is not empty\n    function checkErrorMessage () {\n        return errorMessage ? true : false;\n    }\n\n    return (\n        <div>\n            <div className=\"student-container\">\n                <h1>List of Attendees</h1>\n                <Container>\n                    <Row>\n                        <Col>\n                            <ShuffleTimeList shuffleList={japaneseNumber} setShuffleList={setJapaneseNumber}/>\n                        </Col>\n                        <Col>\n                            <ShuffleTimeList shuffleList={foreignerNumber} setShuffleList={setForeignerNumber}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default ShuffleTimeContainer;\n"]},"metadata":{},"sourceType":"module"}