{"ast":null,"code":"var _jsxFileName = \"/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\nimport defaultJson from '../json/ShuffleList.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShuffleTimeContainer = props => {\n  _s();\n\n  const [japaneseList, setJapaneseList] = useState([]);\n  const [foreignerList, setForeignerList] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    //use default json if it is not empty\n    let shuffleJson = defaultJson;\n    console.log(shuffleJson);\n    let newJapaneseList = [];\n    let newForeignerList = [];\n\n    for (let i = 0; i < defaultJson.japanese.length; ++i) {\n      newJapaneseList.push({\n        id: i + 1,\n        name: defaultJson.japanese[i]\n      });\n    }\n\n    for (let i = 0; i < defaultJson.foreigner.length; ++i) {\n      newForeignerList.push({\n        id: i + 1,\n        name: defaultJson.foreigner[i]\n      });\n    }\n\n    setJapaneseList(newJapaneseList);\n    setForeignerList(newForeignerList);\n    console.log(newJapaneseList);\n    console.log(newForeignerList);\n  }, []); // function isJson(str) {\n  //     try {\n  //         JSON.parse(str);\n  //     } catch (e) {\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  //check if errorMessage is not empty\n\n  function checkErrorMessage() {\n    return errorMessage ? true : false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Attendees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: japaneseList,\n              setShuffleList: setJapaneseList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ShuffleTimeList, {\n              shuffleList: foreignerList,\n              setShuffleList: setForeignerList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShuffleTimeContainer, \"QkSDTlDtjQwOoj6gdlNSkrXOod4=\");\n\n_c = ShuffleTimeContainer;\nexport default ShuffleTimeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleTimeContainer\");","map":{"version":3,"sources":["/Users/johnli/Documents/meetup_projects/shuffle-time/src/components/ShuffleTimeContainer.js"],"names":["React","useState","useEffect","ShuffleTimeList","Container","Row","Col","defaultJson","ShuffleTimeContainer","props","japaneseList","setJapaneseList","foreignerList","setForeignerList","editMode","setEditMode","errorMessage","setErrorMessage","shuffleJson","console","log","newJapaneseList","newForeignerList","i","japanese","length","push","id","name","foreigner","checkErrorMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ShuffleTimeList from './ShuffleTimeList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../styles/ShuffleTimeContainer.css';\nimport defaultJson from '../json/ShuffleList.json';\n\nconst ShuffleTimeContainer = (props) => {\n\n    const [japaneseList, setJapaneseList] = useState([]);\n    const [foreignerList, setForeignerList] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n        //use default json if it is not empty\n        let shuffleJson = defaultJson;\n        console.log(shuffleJson);\n\n        let newJapaneseList = [];\n        let newForeignerList = [];\n        for (let i = 0; i < defaultJson.japanese.length; ++i) {\n            newJapaneseList.push({id: i+1, name: defaultJson.japanese[i]});\n        }\n        for (let i = 0; i < defaultJson.foreigner.length; ++i) {\n            newForeignerList.push({id: i+1, name: defaultJson.foreigner[i]});\n        }\n        setJapaneseList(newJapaneseList);\n        setForeignerList(newForeignerList);\n  \n        console.log(newJapaneseList);\n        console.log(newForeignerList);\n    }, []);\n\n    // function isJson(str) {\n    //     try {\n    //         JSON.parse(str);\n    //     } catch (e) {\n    //         return false;\n    //     }\n    //     return true;\n    // }\n\n    //check if errorMessage is not empty\n    function checkErrorMessage () {\n        return errorMessage ? true : false;\n    }\n\n    return (\n        <div>\n            <div className=\"student-container\">\n                <h1>List of Attendees</h1>\n                <Container>\n                    <Row>\n                        <Col>\n                            <ShuffleTimeList shuffleList={japaneseList} setShuffleList={setJapaneseList}/>\n                        </Col>\n                        <Col>\n                            <ShuffleTimeList shuffleList={foreignerList} setShuffleList={setForeignerList}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default ShuffleTimeContainer;\n"]},"metadata":{},"sourceType":"module"}